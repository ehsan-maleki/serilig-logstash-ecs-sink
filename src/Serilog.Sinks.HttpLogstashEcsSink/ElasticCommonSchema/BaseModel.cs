using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Serilog.ElasticCommonSchema
{
    /// <summary>
    /// The base field set contains all fields which are on the top level. These fields are common across all types of events.
    /// </summary>
    [DataContract]
    public class BaseModel
    {
        public BaseModel()
        {
            
        }

        public BaseModel(Exception exception)
        {
        }
        /// <summary>
        /// Date/time when the event originated.
        /// This is the date/time extracted from the event, typically representing when the event was generated by the source.
        /// If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
        /// Required field for all events.
        /// type: date
        /// example: 2016-05-23T08:05:34.853Z
        /// </summary>
        [DataMember]
        [JsonProperty("@timestamp")]
        public DateTimeOffset Timestamp { get; set; }

        /// <summary>
        /// Custom key/value pairs.
        /// Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.
        /// Example: docker and k8s labels.
        /// type: object
        /// example: {'application': 'foo-bar', 'env': 'production'}
        /// </summary>
        [DataMember]
        [JsonProperty("labels")]
        public List<KeyValuePair<string, string>> Type { get; set; }

        /// <summary>
        /// For log events the message field contains the log message, optimized for viewing in a log viewer.
        /// For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
        /// If multiple messages exist, they can be combined into one message.
        /// type: text
        /// example: Hello World
        /// </summary>
        [DataMember]
        [JsonProperty("tags")]
        public List<string> Tags { get; set; }

        [DataMember]
        [JsonProperty("agent")]
        public AgentModel Agent { get; set; }

        [DataMember]
        [JsonProperty("client")]
        public ClientModel Client { get; set; }

        [DataMember]
        [JsonProperty("cloud")]
        public CloudModel Cloud { get; set; }

        [DataMember]
        [JsonProperty("container")]
        public ContainerModel Container { get; set; }

        [DataMember]
        [JsonProperty("destination")]
        public DestinationModel Destination { get; set; }

        [DataMember]
        [JsonProperty("error")]
        public ErrorModel Error { get; set; }

        [DataMember]
        [JsonProperty("event")]
        public EventModel Event { get; set; }

        [DataMember]
        [JsonProperty("file")]
        public FileModel File { get; set; }

        [DataMember]
        [JsonProperty("geo")]
        public GeoModel Geo { get; set; }

        [DataMember]
        [JsonProperty("group")]
        public GroupModel Group { get; set; }

        [DataMember]
        [JsonProperty("host")]
        public HostModel Host { get; set; }

        [DataMember]
        [JsonProperty("http")]
        public HttpModel Http { get; set; }

        [DataMember]
        [JsonProperty("log")]
        public LogModel Log { get; set; }

        [DataMember]
        [JsonProperty("network")]
        public NetworkModel Network { get; set; }

        [DataMember]
        [JsonProperty("observer")]
        public ObserverModel Observer { get; set; }

        [DataMember]
        [JsonProperty("organization")]
        public OrganizationModel Organization { get; set; }

        [DataMember]
        [JsonProperty("operating_system")]
        public OperatingSystemModel OperatingSystem { get; set; }

        [DataMember]
        [JsonProperty("process")]
        public ProcessModel Process { get; set; }

        [DataMember]
        [JsonProperty("server")]
        public ServerModel Server { get; set; }

        [DataMember]
        [JsonProperty("service")]
        public ServiceModel Service { get; set; }

        [DataMember]
        [JsonProperty("source")]
        public SourceModel Source { get; set; }

        [DataMember]
        [JsonProperty("url")]
        public UrlModel Url { get; set; }

        [DataMember]
        [JsonProperty("user")]
        public UserModel User { get; set; }

        [DataMember]
        [JsonProperty("user_agent")]
        public UserAgentModel UserAgent { get; set; }

        /// <summary>
        /// ECS version this event conforms to. ecs.version is a required field and must exist in all events.
        /// When querying across multiple indices — which may conform to slightly different ECS versions —
        /// this field lets integrations adjust to the schema version of the events.
        /// type: keyword
        /// example: 1.0.0
        /// </summary>
        [DataMember]
        [JsonProperty("version")]
        public string Version { get; set; }
    }
}